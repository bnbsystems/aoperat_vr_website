{"version":3,"file":"component---src-templates-blog-post-js-46b3090fdc3c64a55503.js","mappings":"uIAGaA,EAAc,SAAH,OAAMC,EAAO,EAAPA,QAASC,EAAS,EAATA,UAAS,OAC9C,uBAAKA,UAAWA,EAAWC,wBAAyB,CAAEC,OAAQH,IAAa,EAc7E,IAXgB,SAAH,OAAMA,EAAO,EAAPA,QAASC,EAAS,EAATA,UAAS,OACnC,uBAAKA,UAAWA,GAAYD,EAAc,C,4ICDtCI,EAAS,CACbC,WAAY,CACVC,EAAG,CACDC,MAAO,QACP,cAAe,CACbA,MAAO,QAET,UAAW,CACTA,MAAO,WAMTC,EAAa,SAAAC,GAAK,OACtB,eAAKR,UAAU,mBAAmBS,GAAIN,EAAOC,aAC3C,kBACGI,EAAME,UAAoD,cAAxCF,EAAME,SAASC,YAAYC,WAC5C,mBACE,QAAC,EAAAC,KAAI,CAACC,GAAIN,EAAME,SAASK,OAAOC,KAAMC,IAAI,SACxC,aACER,GAAI,CACFH,MAAO,WAGT,gBAAMN,UAAU,eACd,QAAC,MAAe,OACV,IAAI,cAGd,gBAAMA,UAAU,cACbQ,EAAME,SAASC,YAAYO,SAKnCV,EAAMW,MAA4C,cAApCX,EAAMW,KAAKR,YAAYC,WACpC,mBACE,QAAC,EAAAC,KAAI,CAACC,GAAIN,EAAMW,KAAKJ,OAAOC,KAAMC,IAAI,SACpC,aACER,GAAI,CACFH,MAAO,UAEV,WACU,KACT,gBAAMN,UAAU,gBACd,QAAC,MAAgB,SAGrB,gBAAMA,UAAU,cAAcQ,EAAMW,KAAKR,YAAYO,UAKzD,EAiER,EA9DiB,SAAH,GAAmE,IAA9DA,EAAK,EAALA,MAAOE,EAAK,EAALA,MAAOV,EAAQ,EAARA,SAAUS,EAAI,EAAJA,KAAMpB,EAAO,EAAPA,QAC3CS,EAAQ,CACVE,SAAAA,EACAS,KAAAA,GAGIE,EANkE,EAAhBC,kBAMhBC,EAAAA,EAExC,OACE,eAAKvB,UAAU,yCACX,eAAKA,UAAU,YACb,eAAKA,UAAU,4BACb,kBAAQA,UAAU,mBACfoB,EACCA,SAAAA,EAAOI,KACP,eACAC,IAAKL,EACLM,UAAW,QACXC,MAAO,CAELC,MAAM,OACNC,UAAU,SAEZ7B,UAAU,kBAEV8B,YAAa,EAEbC,IAAI,GACJC,QAAS,CAAC,OAAQ,OAAQ,WAE1B,QAAC,EAAAC,EAAW,CACVb,MAAOA,EACPW,IAAK,GACLJ,MAAO,CAELC,MAAM,OACNC,UAAU,SAEZC,YAAa,EACbI,OAAO,YACPR,UAAW,UAGb,KAGJ,cAAI1B,UAAU,6EACXkB,IAGH,wBACA,QAACG,EAAW,CAACtB,QAASA,MAEtB,wBACEW,GAAYS,KAAS,QAACZ,EAAeC,MAMnD,ECnFA,EA/Ba,SAAH,GAA+B,IAAzB2B,EAAI,EAAJA,KAAMC,EAAW,EAAXA,YACZC,EAAmBF,EAAnBE,eACA1B,EAA+B0B,EAA/B1B,YAAa2B,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAErBC,EAAQ7B,EAAY8B,cACtB9B,EAAY8B,cAAcC,gBAAgBC,gBAC1C,GACIjC,EAAmB0B,EAAnB1B,SAAUS,EAASiB,EAATjB,KAElB,OACE,QAAC,IAAM,CAACnB,UAAU,SAChB,QAAC,IAAG,CACFkB,MAAOP,EAAYO,MACnB0B,YACEjC,EAAYiC,YAAcjC,EAAYiC,YAAcL,EAEtDnB,MAAOoB,EACPK,SAAS,KAEX,QAAC,EAAQ,CACP3B,MAAOP,EAAYO,MACnBE,MAAOoB,EACP9B,SAAUA,EACVS,KAAMA,EACNpB,QAASuC,EACThB,iBAAkBxB,EAAAA,IAI1B,C","sources":["webpack:///./src/components/content.js","webpack:///./src/templates/body/blog-post-body.js","webpack:///./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const HTMLContent = ({ content, className }) => (\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\n);\n\nconst Content = ({ content, className }) => (\n  <div className={className}>{content}</div>\n);\n\nContent.propTypes = {\n  content: PropTypes.node,\n  className: PropTypes.string,\n};\n\nHTMLContent.propTypes = Content.propTypes;\n\nexport default Content;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { RiArrowRightLine, RiArrowLeftLine } from \"react-icons/ri\"\nimport Content from \"../../components/content\"\n\nconst styles = {\n  pagination: {\n    a: {\n      color: \"muted\",\n      \"&.is-active\": {\n        color: \"text\",\n      },\n      \"&:hover\": {\n        color: \"text\",\n      },\n    },\n  },\n}\n\nconst Pagination = props => (\n  <div className=\"pagination -post\" sx={styles.pagination}>\n    <ul>\n      {props.previous && props.previous.frontmatter.template === \"blog-post\" && (\n        <li>\n          <Link to={props.previous.fields.slug} rel=\"prev\">\n            <p\n              sx={{\n                color: \"muted\",\n              }}\n            >\n              <span className=\"icon -left\">\n                <RiArrowLeftLine />\n              </span>{\" \"}\n              Poprzedni\n            </p>\n            <span className=\"page-title\">\n              {props.previous.frontmatter.title}\n            </span>\n          </Link>\n        </li>\n      )}\n      {props.next && props.next.frontmatter.template === \"blog-post\" && (\n        <li>\n          <Link to={props.next.fields.slug} rel=\"next\">\n            <p\n              sx={{\n                color: \"muted\",\n              }}\n            >\n              NastÄ™pny{\" \"}\n              <span className=\"icon -right\">\n                <RiArrowRightLine />\n              </span>\n            </p>\n            <span className=\"page-title\">{props.next.frontmatter.title}</span>\n          </Link>\n        </li>\n      )}\n    </ul>\n  </div>\n)\n\nconst PostBody = ({title, image, previous, next, content, contentComponent}) => {\n  let props = {\n    previous,\n    next,\n  }\n\n  const PostContent = contentComponent || Content;\n  \n  return (\n    <div className=\"container content mrb-blog-container\">\n        <div className=\"columns\">\n          <div className=\"column is-8 is-offset-2\">\n            <header className=\"featured-banner\">\n              {image ? (\n                image?.url ?\n                <img\n                src={image}\n                objectFit={\"cover\"}\n                style={{\n                  // You can set a maximum height for the image, if you wish.\n                  width:\"100%\",\n                  maxHeight:\"400px\"\n                }}\n                className=\"mrb-blog-thumbg\"\n                // You can optionally force an aspect ratio for the generated image\n                aspectratio={3 / 1}\n                // This is a presentational image, so the alt should be an empty string\n                alt=\"\"\n                formats={[\"auto\", \"webp\", \"avif\"]}\n                />:\n                <GatsbyImage\n                  image={image}\n                  alt={\"\"}\n                  style={{\n                    // You can set a maximum height for the image, if you wish.\n                    width:\"100%\",\n                    maxHeight:\"400px\"\n                  }}\n                  aspectratio={3 / 1}\n                  layout=\"fullWidth\"\n                  objectFit={\"cover\"}\n                />\n              ) : (\n                \"\"\n              )}\n            </header>\n            <h1 className=\"title is-size-2 has-text-weight-bold is-bold-light is-color-primary-green\">\n              {title}\n            </h1>\n\n            <section>\n            <PostContent content={content} />\n            </section>\n            <section>\n            {(previous || next) && <Pagination {...props} />}\n            </section>\n          </div>\n        </div>\n      </div>\n  )\n}\n\nexport default PostBody;","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { graphql } from \"gatsby\"\nimport { HTMLContent } from \"../components/content\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport PostBody from \"./body/blog-post-body\"\n\n\n\nconst Post = ({ data, pageContext }) => {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const { frontmatter, html, excerpt } = markdownRemark\n\n  const Image = frontmatter.featuredImage\n    ? frontmatter.featuredImage.childImageSharp.gatsbyImageData\n    : \"\"\n  const { previous, next } = pageContext\n\n  return (\n    <Layout className=\"page\">\n      <Seo\n        title={frontmatter.title}\n        description={\n          frontmatter.description ? frontmatter.description : excerpt\n        }\n        image={Image}\n        article={true}\n      />\n      <PostBody \n        title={frontmatter.title}\n        image={Image}\n        previous={previous}\n        next={next}\n        content={html}\n        contentComponent={HTMLContent}\n      />\n    </Layout>\n  )\n}\n\nexport default Post\n\nexport const pageQuery = graphql`\n  query BlogPostQuery($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      excerpt(pruneLength: 148)\n      fields{\n        slug\n      }\n      frontmatter {\n        title\n        description\n        featuredImage {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH)\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["HTMLContent","content","className","dangerouslySetInnerHTML","__html","styles","pagination","a","color","Pagination","props","sx","previous","frontmatter","template","Link","to","fields","slug","rel","title","next","image","PostContent","contentComponent","Content","url","src","objectFit","style","width","maxHeight","aspectratio","alt","formats","G","layout","data","pageContext","markdownRemark","html","excerpt","Image","featuredImage","childImageSharp","gatsbyImageData","description","article"],"sourceRoot":""}