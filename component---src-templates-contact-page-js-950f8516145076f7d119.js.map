{"version":3,"file":"component---src-templates-contact-page-js-950f8516145076f7d119.js","mappings":"yLAEe,SAASA,IAEtB,OACE,2BACI,wBACEC,UAAU,eACVC,OAAO,UACPC,KAAK,UACLC,OAAO,QAEP,yBAAOC,KAAK,SAASF,KAAK,YAAYG,MAAM,YAC5C,yBACE,6BAAO,kBAEL,yBAAOD,KAAK,OAAOF,KAAK,OAAOI,UAAQ,MAG3C,yBACE,6BAAO,QAEL,yBAAOF,KAAK,QAAQF,KAAK,QAAQI,UAAQ,MAG7C,yBACE,6BAAO,cAEL,yBAAOF,KAAK,OAAOF,KAAK,QAAQI,UAAQ,MAG5C,yBACE,6BAAO,QAEL,yBAAOF,KAAK,OAAOF,KAAK,UAAUI,UAAQ,MAG9C,yBACE,6BAAO,YAEL,4BAAUJ,KAAK,UAAUI,UAAQ,MAGrC,qBAAGN,UAAU,oBACX,0BACEA,UAAU,qCACVO,GAAI,CACFC,QAAS,mBAEXJ,KAAK,UACN,sBAOb,CChDO,IA+DP,EAxCgB,SAAH,GAAkB,IAAZK,EAAI,EAAJA,KACTC,EAAyBD,EAAzBC,eAAgBC,EAASF,EAATE,KAChBC,EAAgBF,EAAhBE,YAER,OACE,QAAC,IAAM,CAACZ,UAAU,eAAeO,GAAIM,EAAcC,cACjD,QAAC,IAAG,CACFC,MAAO,kBACPC,YAAaJ,EAAYG,MAAQ,IAAMJ,EAAKM,aAAaF,SAE3D,wBACE,eAAKf,UAAU,sCACb,eAAKA,UAAU,6BACb,eAAKA,UAAU,sEACb,cAAIA,UAAU,sGAAsGY,EAAYG,QAChI,QAAChB,EAAW,QAEd,eAAKC,UAAU,sEACb,QAAC,EAAAkB,EAAW,CACVC,OAAOC,EAAAA,EAAAA,GAASR,EAAYO,OAC5BE,UAAW,QACXC,MAAO,CACLC,SAAU,MAEVC,MAAO,QAGTC,YAAa,EAEbC,IAAI,GACJC,QAAS,CAAC,OAAQ,OAAQ,cAQ1C,EAIMd,EAAgB,CACpBC,YAAa,CACXc,MAAO,CACLC,OAAQ,YACRC,YAAa,cACbC,GAAI,kBACJC,QAAS,QAEXC,SAAU,CACRJ,OAAQ,YACRC,YAAa,cACbC,GAAI,kBACJC,QAAS,S","sources":["webpack:///./src/components/contact-form.js","webpack:///./src/templates/contact-page.js"],"sourcesContent":["import React from 'react'\n\nexport default function ContactForm () {\n\n  return (\n    <div>\n        <form\n          className=\"contact-form\"\n          action=\"/thanks\"\n          name=\"contact\"\n          method=\"POST\"\n        >\n          <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\n          <p>\n            <label>\n              Imię i nazwisko\n              <input type=\"text\" name=\"name\" required />\n            </label>\n          </p>\n          <p>\n            <label>\n              Email\n              <input type=\"email\" name=\"email\" required />\n            </label>\n          </p>\n          <p>\n            <label>\n              Nr telefonu\n              <input type=\"text\" name=\"phone\" required />\n            </label>\n          </p>\n          <p>\n            <label>\n              Temat\n              <input type=\"text\" name=\"subject\" required />\n            </label>\n          </p>\n          <p>\n            <label>\n              Wiadomość\n              <textarea name=\"message\" required></textarea>\n            </label>\n          </p>\n          <p className=\"text-align-right\">\n            <button\n              className=\"button mrb-button mrb-button-light\"\n              sx={{\n                variant: \"variants.button\",\n              }}\n              type=\"submit\"\n            >\n              Wyślij wiadomość\n            </button>\n          </p>\n        </form>\n      </div>\n  )\n}","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { graphql } from \"gatsby\"\nimport { getImage } from \"gatsby-plugin-image\";\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport ContactForm from \"../components/contact-form\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nexport const pageQuery = graphql`\n  query ContactQuery($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      excerpt(pruneLength: 140)\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            gatsbyImageData(quality: 100, layout: FULL_WIDTH)\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n\nconst Contact = ({ data }) => {\n  const { markdownRemark, site } = data // data.markdownRemark holds your post data\n  const { frontmatter } = markdownRemark\n\n  return (\n    <Layout className=\"contact-page\" sx={contactStyles.contactPage}>\n      <Seo\n        title={\"RE VR - Kontakt\"}\n        description={frontmatter.title + \" \" + site.siteMetadata.title}\n      />\n      <section>\n        <div className=\"container is-fullhd mrb-container\">\n          <div className=\"columns is-variable is-8\">\n            <div className=\"column is-flex is-flex-direction-column is-justify-content-center\">\n              <h1 className=\"has-text-weight-bold is-size-3-mobile is-size-2-tablet is-size-1-widescreen is-color-primary-green\">{frontmatter.title}</h1>\n              <ContactForm/>\n            </div>\n            <div className=\"column is-flex is-flex-direction-column is-justify-content-center\">\n              <GatsbyImage\n                image={getImage(frontmatter.image)}\n                objectFit={\"cover\"}\n                style={{\n                  gridArea: \"1/1\",\n                  // You can set a maximum height for the image, if you wish.\n                  width: \"100%\",\n                }}\n                // You can optionally force an aspect ratio for the generated image\n                aspectratio={3 / 1}\n                // This is a presentational image, so the alt should be an empty string\n                alt=\"\"\n                formats={[\"auto\", \"webp\", \"avif\"]}\n              />\n              </div>\n          </div>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default Contact\n\nconst contactStyles = {\n  contactPage: {\n    input: {\n      border: \"6px solid\",\n      borderColor: \"inputBorder\",\n      bg: \"inputBackground\",\n      outline: \"none\",\n    },\n    textarea: {\n      border: \"6px solid\",\n      borderColor: \"inputBorder\",\n      bg: \"inputBackground\",\n      outline: \"none\",\n    },\n  },\n}\n"],"names":["ContactForm","className","action","name","method","type","value","required","sx","variant","data","markdownRemark","site","frontmatter","contactStyles","contactPage","title","description","siteMetadata","G","image","getImage","objectFit","style","gridArea","width","aspectratio","alt","formats","input","border","borderColor","bg","outline","textarea"],"sourceRoot":""}